# Test cases for a class Mylist that inherits from a list
# def print_sorted(self)

>>> MyList = __import__('1-my_list').MyList

>>> matrix = [
...      [1, 2, 3],
...      [4, 5, 6]
...  ]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]


>>> matrix = [
...      [1, 2, 3],
...      [4, 5, 6]
...  ]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero


>>> matrix = None
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix = [
...      [1, 2, 3, 4, 5],
...      [4, 5, 6]
...  ]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size


>>> matrix = [
...      [1, 2, 3],
...      [4, 5, 6]
...  ]
>>> print(matrix_divided(matrix, 'c'))
Traceback (most recent call last):
TypeError: div must be a number
